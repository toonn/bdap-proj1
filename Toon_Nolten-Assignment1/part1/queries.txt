SELECT musicalActors.name FROM (SELECT actors.name, movies2actors.movieid FROM actors NATURAL JOIN movies2actors NATURAL JOIN genres WHERE genres.genre = \"Musical\") AS musicalActors WHERE musicalActors.movieid NOT IN (SELECT movies.movieid FROM movies WHERE year < 2000) ORDER BY musicalActors.name;
SELECT year_maxcount.year FROM (SELECT year_count.year, MAX(count) FROM (SELECT movies.year, COUNT(*) AS count FROM movies NATURAL JOIN movies2actors NATURAL JOIN (SELECT actors.actorid FROM actors WHERE name = \"Johnson, Arthur V.\") AS JAid GROUP BY movies.year) AS year_count) AS year_maxcount;
SELECT fem_atleast3.country, fem_atleast3.name, AVG(ratings.rank) AS rank FROM (SELECT countries.country, actors.name, actors.actorid FROM actors NATURAL JOIN movies2actors NATURAL JOIN movies NATURAL JOIN countries WHERE actors.sex = \"F\" AND movies.year >= 2000 GROUP BY actors.name, countries.country HAVING COUNT(*) >= 3) AS fem_atleast3 NATURAL JOIN movies2actors NATURAL JOIN ratings GROUP BY fem_atleast3.country, fem_atleast3.name ORDER BY fem_atleast3.country, rank DESC, fem_atleast3.name;
SELECT country_directors.country, COUNT(*) AS nb_directors FROM (SELECT countries.country, directors.name FROM directors NATURAL JOIN movies2directors NATURAL JOIN ratings NATURAL JOIN countries WHERE ratings.rank >= 5 GROUP BY countries.country, directors.name HAVING COUNT(*) >= 2) AS country_directors GROUP BY country_directors.country ORDER BY nb_directors DESC, country_directors.country;
CREATE OR REPLACE VIEW actor_years AS SELECT actors.name, movies.year FROM actors NATURAL JOIN movies2actors NATURAL JOIN movies; SELECT ay1.name, ay1.year AS start, ay2.year AS end, ay2.year - ay1.year AS duration FROM actor_years AS ay1 JOIN actor_years AS ay2 ON ay1.name = ay2.name WHERE ay1.year < ay2.year AND ay2.year - ay1.year >= 10 AND NOT EXISTS (SELECT year FROM actor_years WHERE name = ay1.name AND year > ay1.year AND year < ay2.year) GROUP BY ay1.name HAVING ay2.year = MAX(ay2.year) ORDER BY end DESC, duration DESC, name;
CREATE OR REPLACE VIEW international_actors AS SELECT actors.name, actors.actorid FROM actors NATURAL JOIN movies2actors NATURAL JOIN countries GROUP BY actors.name HAVING COUNT(countries.country) >= 2; SELECT DISTINCT title FROM movies NATURAL JOIN movies2actors NATURAL JOIN international_actors WHERE movieid NOT IN (SELECT movieid FROM movies2actors WHERE actorid NOT IN (SELECT actorid FROM international_actors)) ORDER BY title;
